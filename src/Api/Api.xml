<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Api</name>
    </assembly>
    <members>
        <member name="M:Api.Controllers.V1.BannersController.GetAll(Application.Features.Banner.GetAll.GetAllBannersQuery)">
            <summary>
            Returns all banners
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BannersController.GetAllByBranchId(Application.Features.Banner.GetAllByBranchId.GetAllBannersByBranchIdQuery)">
            <summary>
            Returns all banners by given jobBranch id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BannersController.GetAllByType(Application.Features.Banner.GetAllByType.GetAllBannersByTypeQuery)">
            <summary>
            Returns all banners by given type
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BlogsController.GetAllByFilter(Application.Features.Blog.Queries.GetAllByFilter.GetAllBlogsByFilterQuery)">
            <summary>
            Returns all blogs by given filter
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BlogsController.GetByRoute(Application.Features.Blog.Queries.GetByRoute.GetBlogByRouteQuery)">
            <summary>
            Returns a blog by given route
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BlogsController.GetBlogCategories(Application.Features.Blog.Queries.GetBlogCategories.GetBlogCategoriesQuery)">
            <summary>
            Returns all blog categories 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BlogsController.GetBlogCategoriesByParentId(Application.Features.Blog.Queries.GetBlogCategoriesByParentId.GetBlogCategoriesByParentIdQuery)">
            <summary>
            Returns all blog categories by given parent id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.BrandsController.GetAll(Application.Features.Brand.Queries.GetAll.GetAllBrandsQuery)">
            <summary>
            Returns all brands
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CategoriesController.GetAll(Application.Features.Category.Queries.GetAll.GetAllCategoriesQuery)">
            <summary>
            Returns all categories
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CategoriesController.GetAllByParentId(Application.Features.Category.Queries.GetAllByParentId.GetAllCategoriesByParentIdQuery)">
            <summary>
            Returns all categories by parent id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CategoriesController.GetAllByFilter(Application.Features.Category.Queries.GetAllByFilter.GetAllCategoriesByFilterQuery)">
            <summary>
            Returns all categories by given filter
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CategoriesController.GetByRoute(Application.Features.Category.Queries.GetByRoute.GetCategoryByRouteQuery)">
            <summary>
            Returns a category by given route
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CategoriesController.GetCategoryServices(Application.Features.Category.Queries.GetAllCategoryService.GetAllCategoryServiceQuery)">
            <summary>
            Returns all category services
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CitiesController.GetAll(Application.Features.City.Queries.GetAll.GetAllCitiesQuery)">
            <summary>
            Returns all cities
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CitiesController.GetAllByCityBaseId(Application.Features.City.Queries.GetAllByCityBaseId.GetAllCitiesByCityBaseIdQuery)">
            <summary>
            Returns all cities by given city base id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CitiesController.GetAllCityBase(Application.Features.City.Queries.GetAllCityBase.GetAllCityBaseQuery)">
            <summary>
            Returns all cityBases
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CitiesController.GetAllCityCategory(Application.Features.City.Queries.GetAllCityCategory.GetAllCityCategoryQuery)">
            <summary>
            Returns all cityCategories
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CommentsController.GetAllCommentsByFilter(Application.Features.Comment.Queries.GetAll.GetCommentsByFilterQuery)">
            <summary>
            Returns all comments by given filter
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CommentsController.GetAllAnswersByFilter(Application.Features.Comment.Queries.GetAllAnswersByCommentId.GetAnswersByCommentIdQuery)">
            <summary>
            Returns all replies to a comment with the given comment id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CommentsController.Create(Application.Features.Comment.Commands.Create.CreateCommentCommand)">
            <summary>
            Creates a comment
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.CommentsController.CreateAnswerComment(Application.Features.Comment.Commands.CreateAnswer.CreateAnswerCommentCommand)">
            <summary>
            Creates a reply to a comment
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ConfigsController.Get(Application.Features.Config.Queries.Get.GetConfigQuery)">
            <summary>
            Returns all configs
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.DayOfWeeksController.GetAll(Application.Features.DayOfWeek.Queries.GetAll.GetAllDayOfWeekQuery)">
            <summary>
            Returns all day of weeks
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.FaqsController.GetAll(Application.Features.Faq.Queries.GetAll.GetAllFaqsQuery)">
            <summary>
            Returns all faqs
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.FaqsController.GetAllByCategoryId(Application.Features.Faq.Queries.GetAllByCategoryId.GetAllFaqsByCategoryIdQuery)">
            <summary>
            Returns all faqs by given category id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.FaqsController.GetAllFaqCategories(Application.Features.Faq.Queries.GetAllFaqCategories.GetAllFaqCategoriesQuery)">
            <summary>
            Returns all faq categories
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobBranchesByFilter(Application.Features.Job.Queries.GetAllJobBranch.GetAllJobBranchByFilterQuery)">
            <summary>
            Returns all job branches by given filter
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobBranchesByJobId(Application.Features.Job.Queries.GetAllJobBranchByJobId.GetAllJobBranchByJobIdQuery)">
            <summary>
            Returns all job branches by given job id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobBranchById(Application.Features.Job.Queries.GetJobBranchById.GetJobBranchByIdQuery)">
            <summary>
            Returns job branch by unique id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobServices(Application.Features.Job.Queries.GetAllJobService.GetAllJobServiceQuery)">
            <summary>
            Returns all job services 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetNewestJobs(Application.Features.Job.Queries.GetNewestJobs.GetNewestJobsQuery)">
            <summary>
            Returns newest jobs
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetBestJobs(Application.Features.Job.Queries.GetBestJobs.GetBestJobsQuery)">
            <summary>
            Returns best jobs
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetRelatedJobs(Application.Features.Job.Queries.GetRelatedJobs.GetRelatedJobsQuery)">
            <summary>
            Returns Related jobs
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetByRoute(Application.Features.Job.Queries.GetByRoute.GetJobByRouteQuery)">
            <summary>
            Returns a job by given route
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobsByCategoryId(Application.Features.Job.Queries.GetAllByCategoryId.GetAllJobsByCategoryIdQuery)">
            <summary>
            Returns all jobs by given category id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobSelectionSliderByFilter(Application.Features.Job.Queries.GetJobSelectionSlider.GetJobSelectionSliderQuery)">
            <summary>
            Returns all job selection slider by given filter
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobBranchShortLinksByJobBranchId(Application.Features.Job.Queries.GetJobBranchShortLinks.GetJobBranchShortLinksQuery)">
            <summary>
            Returns all job branch short links by given job branch id 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobBranchGalleriesByJobBranchId(Application.Features.Job.Queries.GetJobBranchGalleries.GetJobBranchGalleriesQuery)">
            <summary>
            Returns all job branch galleries by given job branch id 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.GetJobTimeWorkByJobBranchId(Application.Features.Job.Queries.GetJobTimeWork.GetJobTimeWorksQuery)">
            <summary>
            Returns all job time works by given job branch id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.CreateJob(Application.Features.Job.Commands.Create.CreateJobCommand)">
            <summary>
            Creates a job
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.CreateJobCategory(Application.Features.Job.Commands.CreateJobCategory.CreateJobCategoryCommand)">
            <summary>
            Creates a job category
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.CreateJobBranch(Application.Features.Job.Commands.CreateJobBranch.CreateJobBranchCommand)">
            <summary>
            Creates a job branch
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.CreateFreeJobBranch(Application.Features.Job.Commands.CreateFreeJobBranch.CreateFreeJobBranchCommand)">
            <summary>
            Creates a job and also job branch ( add free job in ravil ) 
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UploadJobBranchVideo(Application.Features.Job.Commands.UploadJobBranchVideo.UploadJobBranchVideoCommand)">
            <summary>
            Upload job branch video
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UploadJobBranchGalleries(Application.Features.Job.Commands.UploadJobBranchGalleries.UploadJobBranchGalleriesCommand)">
            <summary>
            Upload job branch galleries
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UploadJobBranchImage(Application.Features.Job.Commands.UploadJobBranchImage.UploadJobBranchImageCommand)">
            <summary>
            Upload job branch image
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UpdateJobBranch(Application.Features.Job.Commands.UpdateJobBranch.UpdateJobBranchCommand)">
            <summary>
            Update a job branch 
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UpdateJobBranchLocation(Application.Features.Job.Commands.UpdateJobBranchLocation.UpdateJobBranchLocationCommand)">
            <summary>
            Update a job branch location
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UpdateJob(Application.Features.Job.Commands.Update.UpdateJobCommand)">
            <summary>
            Update a job 
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.JobsController.UpdateJobCategory(Application.Features.Job.Commands.UpdateJobCategory.UpdateJobCategoryCommand)">
            <summary>
            Update a job category
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.MainSlidersController.GetAllByFilter(Application.Features.MainSlider.Queries.GetAllByFilter.GetAllMainSlidersByFilterQuery)">
            <summary>
            Returns all main sliders 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ServicesController.GetAll(Application.Features.Service.Queries.GetAll.GetAllServicesQuery)">
            <summary>
            Returns all services 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ServicesController.GetJobServices(Application.Features.Job.Queries.GetAllJobService.GetAllJobServiceQuery)">
            <summary>
            Returns all job services
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ServicesController.GetCategoryServices(Application.Features.Category.Queries.GetAllCategoryService.GetAllCategoryServiceQuery)">
            <summary>
            Returns all category services 
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ShortLinksController.GetAll(Application.Features.ShortLink.Queries.GetAll.GetAllShortLinkQuery)">
            <summary>
            Returns all short links
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.ShortLinksController.GetAllByItemId(Application.Features.ShortLink.Queries.GetAllByItemId.GetAllShortLinkByItemIdQuery)">
            <summary>
            Returns all short link by item id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.StatesController.GetAll(Application.Features.State.Queries.GetAll.GetAllStatesQuery)">
            <summary>
            Returns all state bases
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.StatesController.GetAllByStateBaseId(Application.Features.State.Queries.GetAllByStateBaseId.GetAllStatesByStateBaseIdQuery)">
            <summary>
            Returns all states by iven state base id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.StatesController.GetAllStateBases(Application.Features.State.Queries.GetAllStateBase.GetAllStateBaseQuery)">
            <summary>
            Returns all state bases
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TagsController.GetAll(Application.Features.Tag.Queries.GetAll.GetAllTagsQuery)">
            <summary>
            Returns all tags
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TagsController.GetAllByType(Application.Features.Tag.Queries.GetAllByType.GetAllTagsByTypeQuery)">
            <summary>
            Returns all tags by given type
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TagsController.GetBlogTagsByBlogId(Application.Features.Blog.Queries.GetTags.GetBlogTagsByIdQuery)">
            <summary>
            Returns blog tags by given blog id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TagsController.GetJobTagsByJobId(Application.Features.Job.Queries.GetTags.GetJobTagsByIdQuery)">
            <summary>
            Returns job tags by given job id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TagsController.GetJobBranchTagsByJobBranchId(Application.Features.Job.Queries.GetJobBranchTags.GetJobBranchTagsByIdQuery)">
            <summary>
            Returns job branch tags by job branch id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.TeamsController.GetAll(Application.Features.Team.Queries.GetAll.GetAllTeamsQuery)">
            <summary>
            Returns all teams
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.GetUserJobBranches(Application.Features.User.Queries.GetUserJobBranches.GetUserJobBranchesQuery)">
            <summary>
            Returns user job branches for given user id
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.AddBlogLike(Application.Features.User.Commands.AddBlogLike.AddBlogLikeCommand)">
            <summary>
            add blog like with given blog id and user id
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.AddToBookMark(Application.Features.User.Commands.AddToBookMark.AddToBookMarkCommand)">
            <summary>
            add blog or branch to bookmark for given user id
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.RemoveBookMark(Application.Features.User.Commands.RemoveBookMark.RemoveBookMarkCommand)">
            <summary>
            remove a bookmark from unique id
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.UploadUserAvatar(Application.Features.User.Commands.UploadUserAvatar.UploadUserAvatarCommand)">
            <summary>
            Upload user avatar for given user id
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UserProfileController.UpdateUserInfo(Application.Features.User.Commands.UpdateInfo.UpdateUserInfoCommand)">
            <summary>
            Updates user info for given user id
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UsersController.Create(Application.Features.User.Commands.Create.CreateUserCommand)">
            <summary>
            this action for test
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UsersController.RegisterAndLogin(Application.Features.User.Commands.Register.RegisterUserCommand)">
            <summary>
            this action used for login or register user and gives you a JWT token
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Api.Controllers.V1.UsersController.GenerateToken(Application.Features.User.Commands.GenerateToken.GenerateTokenCommand)">
            <summary>
            Generate JWT token for given user
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
    </members>
</doc>
