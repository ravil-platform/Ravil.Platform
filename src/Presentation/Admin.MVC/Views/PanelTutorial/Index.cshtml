@model PanelTutorialFilterViewModel
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Constants.Files
@inject IOptions<FTPConnectionOptions> FtpConnectionOptions
@{
	string UrlBase = FtpConnectionOptions.Value.UrlBase;

	ViewData["Title"] = "آموزش ها";
	ViewData["selected"] = "PanelTutorials_Index";
}
<a href="javascript:void(0)" class="btn btn-success mb-2" data-toggle="modal" data-target="#CreateForm">
	افزودن آموزش جدید <i class="bx bx-plus"></i>
</a>

<section>
	<div class="users-list-filter px-1">
		<form method="get">
			<input type="hidden" asp-for="FindAll" id="FindAll" value="false" />
			<div class="row border rounded py-2 mb-2">
				<div class="col-12 col-sm-6 col-lg-3">
					<label>تعداد نمایش در هر صفحه</label>
					<fieldset class="form-group">
						<select asp-for="PageSize" class="form-control">
							<option value="5">5</option>
							<option value="10">10</option>
							<option value="20">20</option>
							<option value="50">50</option>
							<option value="100">100</option>
						</select>
					</fieldset>
				</div>

				<div class="col-12 col-sm-6 col-lg-3">
					<label>@Resources.General.DisplayNames.Title</label>
					<input type="text" class="form-control text-left" asp-for="Title" />
				</div>

				<div class="col-12 col-sm-12 col-lg-6 d-flex align-items-center">
					<div class="col-4 col-sm-4 col-lg-4 d-flex align-items-center">
						<button id="empty" type="button" class="btn btn-warning btn-block glow users-list-clear mb-0 mt-75">خالی </button>
					</div>
					<div class="col-4 col-sm-4 col-lg-4 d-flex align-items-center">
						<button type="submit" id="SetFindAll" class="btn btn-info btn-block glow users-list-clear mb-0 mt-75">همه</button>
					</div>
					<div class="col-4 col-sm-4 col-lg-4 d-flex align-items-center">
						<button type="submit" class="btn btn-primary btn-block glow users-list-clear mb-0 mt-75">جستجو</button>
					</div>
				</div>
			</div>
		</form>
	</div>

	<div class="card">
		<div class="table-responsive">
			<div class="dataTables_wrapper no-footer">
				<table class="table mb-0 table-striped table-hover no-footer">
					<thead class="thead-dark">
						<tr role="row">
							<th>@(Resources.General.DisplayNames.CoverPicture)</th>
							<th>@(Resources.General.DisplayNames.Video)</th>
							<th>@(Resources.General.DisplayNames.Title)</th>
							<th>@(Resources.General.DisplayNames.Sort)</th>
							<th>@(Resources.General.DisplayNames.Actions)</th>
						</tr>
					</thead>
					<tbody>
						@if (Model.Entities.Any())
						{
							@foreach (var item in Model.Entities)
							{
								<tr role="row" class="odd">
									<td class="text-bold-700">
										@if (!string.IsNullOrEmpty(item.CoverName))
										{
											<img src="@UrlBase@Paths.PanelTutorialImagePath@item.CoverName" class="rounded-circle mr-1" height="70" width="70">
										}
										else
										{
											<span class="text-danger">ندارد</span>
										}
									</td>

									<td class="text-bold-700">
										@if (!string.IsNullOrEmpty(item.VideoName))
										{
											<video src="@UrlBase@Paths.PanelTutorialVideoPath@item.VideoName" class="rounded-circle mr-1" height="70" width="70"></video>
										}
										else
										{
											<span class="text-danger">ندارد</span>
										}
									</td>

									<td>@item.Title</td>
									<td>@item.Sort</td>
									<td>
										<a onclick="deleteItem('@item.Id','@Url.Action("Delete","PanelTutorial")')" data-toggle="tooltip" data-placement="top" data-original-title="حذف"><i class="bx bxs-trash text-danger"></i></a>
										<a onclick="update('@item.Id')" data-toggle="tooltip" data-placement="top" data-original-title="ویرایش"><i class="bx bxs-edit-alt text-warning"></i></a>
									</td>
								</tr>
							}
						}
						else
						{
							<tr>
								<td colspan="5" class="text-center">@(Resources.General.DisplayNames.ListEmpty)</td>
							</tr>
						}
					</tbody>
				</table>

				<nav aria-label="Page navigation">
					<ul class="pagination pagination-borderless justify-content-center mt-2">
						@if (Model.CurrentPage > 1)
						{
							<li class="page-item previous">
								<a onclick="changePage(@(Model.CurrentPage-1))" class="page-link" href="#">
									<i class="bx bx-chevron-right"></i>
								</a>
							</li>
						}
						else
						{
							<li class="page-item previous disabled">
								<a class="page-link" href="#">
									<i class="bx bx-chevron-right"></i>
								</a>
							</li>
						}
						@for (int i = Model.StartPage; i < Model.EndPage; i++)
						{
							<li class="@(i==Model.CurrentPage?"page-item active":"page-item")" onclick="changePage(@(i))">
								<a class="page-link">@i</a>
							</li>
						}
						@if (Model.CurrentPage < Model.EndPage)
						{
							<li class="page-item next">
								<a onclick="changePage(@(Model.CurrentPage+1))" class="page-link" href="#">
									<i class="bx bx-chevron-left"></i>
								</a>
							</li>
						}
						else
						{
							<li class="page-item next disabled">
								<a class="page-link" href="#">
									<i class="bx bx-chevron-left"></i>
								</a>
							</li>
						}
					</ul>
				</nav>
			</div>
		</div>
	</div>

	<div class="modal fade text-left" id="CreateForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">افزودن آموزش جدید</h4>
					<button type="button" class="close" data-dismiss="modal" aria-label="بستن">
						<i class="bx bx-x"></i>
					</button>
				</div>
				@{
					var model = new CreatePanelTutorialViewModel();
				}
				<partial name="_Create" model="model" />
			</div>
		</div>
	</div>
	<div class="modal fade text-left" id="UpdateForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel33" aria-hidden="true">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h4 class="modal-title">ویرایش آموزش</h4>
					<button type="button" class="close" data-dismiss="modal" aria-label="بستن">
						<i class="bx bx-x"></i>
					</button>
				</div>

			</div>
		</div>
	</div>
</section>

@section Scripts {
	<script src="~/lib/ckeditor4/custom.js"></script>

	<script>
		function update(id) {
			var modalBody = $("#UpdateForm").find('.modal-body');
			var modalFooter = $("#UpdateForm").find('.modal-footer');

			if (modalBody && modalFooter) {
				modalBody.remove();
				modalFooter.remove();
			}

			$.ajax({
				url: '@Url.Action("Update")',
				data: { id: id },
				success: function (result) {
					$("#UpdateForm").find('.modal-content').append(result);
					new bootstrap.Modal(document.getElementById('UpdateForm'), {
						keyboard: false
					}).show();
				},
				complete: function () {
					function readURLUpdate(input) {
						if (input.files && input.files[0]) {
							var reader = new FileReader();

							reader.onload = function (e) {
								$('#updateSelectImage').attr('src', e.target.result);
							}

							reader.readAsDataURL(input.files[0]);
						}
					}
					$("#updateFile").change(function () {
						readURLUpdate(this);
					});


					function readURL2(input) {
						if (input.files && input.files[0]) {
							var reader = new FileReader();

							reader.onload = function (e) {
								$('#createSelectVideo').attr('src', e.target.result);
							}

							reader.readAsDataURL(input.files[0]);
						}
					}

					$("#updateVideoFile").change(function () {
						readURL2(this);
					});

					$('#updateVideoFile').on('change', function (event) {
						const file = event.target.files[0];

						if (file && file.type.startsWith('video/')) {
							const video = document.createElement('video');
							const fileURL = URL.createObjectURL(file);

							video.src = fileURL;
							video.addEventListener('loadedmetadata', function () {
								const duration = video.duration; // مدت زمان ویدیو به ثانیه
								const hours = Math.floor(duration / 3600);
								const minutes = Math.floor((duration % 3600) / 60);
								const seconds = Math.floor(duration % 60);

								// فرمت hh:mm:ss
								const formattedDuration = [
									String(hours).padStart(2, '0'),
									String(minutes).padStart(2, '0'),
									String(seconds).padStart(2, '0')
								].join(':');

								$('#TimeUpdate').val(formattedDuration);
								URL.revokeObjectURL(fileURL);
							});
							video.load();
						}
					});
				}
			});
		}

		function readURL(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();

				reader.onload = function (e) {
					$('#createSelectImage').attr('src', e.target.result);
				}

				reader.readAsDataURL(input.files[0]);
			}
		}

		$("#createFile").change(function () {
			readURL(this);
		});



		function readURL2(input) {
			if (input.files && input.files[0]) {
				var reader = new FileReader();

				reader.onload = function (e) {
					$('#createSelectVideo').attr('src', e.target.result);
				}

				reader.readAsDataURL(input.files[0]);
			}
		}

		$("#videoFile").change(function () {
			readURL2(this);
		});

		function changePage(Page) {
		 var url = new URL(window.location.href);
		 var SerachParams = url.searchParams;
		 //Change PageId
		 SerachParams.set('CurrentPage', Page);
		 url.search = SerachParams.toString();

		 //new Url String
		 var newUrlString = url.toString();
		 window.location.replace(newUrlString);

		}

		$("#SetFindAll").click(function (event) {
			$("#FindAll").val("true");
		});

		$("#empty").click(function (event) {
			$("#PageSize").val(10);
			$("#IsActive").val('null');

			$("#Title").val(null);
		});


		$('#videoFile').on('change', function (event) {
			const file = event.target.files[0];

			if (file && file.type.startsWith('video/')) {
				const video = document.createElement('video');
				const fileURL = URL.createObjectURL(file);

				video.src = fileURL;
				video.addEventListener('loadedmetadata', function () {
					const duration = video.duration;
					const hours = Math.floor(duration / 3600);
					const minutes = Math.floor((duration % 3600) / 60);
					const seconds = Math.floor(duration % 60);

					const formattedDuration = [
						String(hours).padStart(2, '0'),
						String(minutes).padStart(2, '0'),
						String(seconds).padStart(2, '0')
					].join(':');

					$('#Time').val(formattedDuration);
					URL.revokeObjectURL(fileURL);
				});
				video.load();
			}
		});

	</script>
}